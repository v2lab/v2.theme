<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">

<body>

      <div metal:fill-slot="main">
            <metal:main-macro define-macro="main"
                        tal:define="kssClassesView context/@@kss_field_decorator_view;
                                    getKssClasses nocall:kssClassesView/getKssClassesInlineEditable;
                                    date python: context.ZopeTime();
                                    toLocalizedTime nocall:context/@@plone/toLocalizedTime;
	                            DateTime python:modules['DateTime'].DateTime;
                                    templateId template/getId;
                                    url python: here.virtual_url_path();
                                    categoryTitle python: 'category-'+view.getCategoryByURL(url);
                                    ">

                  <div tal:attributes="class python: categoryTitle + ' margin-bottom'" >
                        <div tal:replace="structure provider:plone.abovecontenttitle" />

                        <h1 metal:use-macro="here/kss_generic_macros/macros/generic_title_view">
                          Title or id
                        </h1>

                        <div tal:replace="structure provider:plone.belowcontenttitle" />

                        <p metal:use-macro="here/kss_generic_macros/macros/generic_description_view">
                          Description
                        </p>

                        <div tal:replace="structure provider:plone.abovecontentbody" />

                        <div metal:define-macro="text-field-view"
                             id="parent-fieldname-text" class="stx"
                             tal:define="kss_class python:getKssClasses('text',
                                         templateId=templateId, macro='text-field-view');
                                         text here/getText|nothing"
                             tal:condition="text"
                             tal:attributes="class python:here.Format() in ('text/structured',
                                             'text/x-rst', ) and 'stx' + kss_class or 'plain' + kss_class">
                              <div metal:define-slot="inside" tal:replace="structure text">The body</div>
                        </div>




                  </div>
			<div class="" style="padding: 0">
                  	<h2>Blog</h2>
                	</div>
                  <div class="masonry-holder ">

                        <metal:listingmacro define-macro="listing">
                              <tal:foldercontents define="contentFilter contentFilter|request/contentFilter|nothing;
                                                          limit_display limit_display|request/limit_display|nothing;
                                                          more_url more_url|request/more_url|string:folder_contents;
                                                          folderContents python:here.portal_type=='Topic' and here.queryCatalog(contentFilter, batch=True) or here.getFolderContents(contentFilter, batch=True, b_size=limit_display or 100);
                                                          use_view_action site_properties/typesUseViewActionInListings|python:();
                                                          over_limit python: limit_display and len(folderContents) > limit_display;
                                                          folderContents python: (over_limit and folderContents[:limit_display]) or folderContents;
                                                          batch folderContents;
                                                          root python:context.portal_url.getPortalObject(); site_physical_path python: '/'.join(root.getPhysicalPath());
                                                          blog_physical_path python: site_physical_path+'/lab/blog';
                                                          results python: context.portal_catalog.searchResults(
                                                              path = blog_physical_path,
                                                              portal_type = 'News Item',
                                                              sort_limit=8
                                                              )[:8];


                                                          ">
                                    <tal:listing condition="results">

                                          <tal:block tal:repeat="item results">
                                                <div class="tileItem visualIEFloatFix vevent"
                                                     tal:define="item_url item/getURL|item/absolute_url;
                                                                 normalizeString nocall:context/@@plone/normalizeString;
                                                                 item_id item/getId|item/id;
                                                                 item_title_or_id item/pretty_title_or_id;
                                                                 item_description item/Description;
                                                                 item_type item/portal_type;
                                                                 item_type_title item/Type;
                                                                 item_type_class python: 'contenttype-' + normalizeString(item_type);
                                                                 item_has_leadimage item/hasContentLeadImage;
                                                                 item_object item/getObject;
                                                                 item_is_video python:view.isVideo(item_object);
                                                                item_category python:view.getCategory(item_object);
                                                                item_creator item/Creator;
                                                                "
                                                     tal:attributes="class string:masonry-item tileItem vevent ${item_type_class}">


                                                      <h2 class="" metal:define-macro="listitem">

                                                            <a href="#"
                                                               class="summary url"
                                                               tal:condition="python:item_type != 'Link'"
                                                               tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url"
                                                               tal:content="item_title_or_id">
                                                              Item Title
                                                            </a>

                                                            <a href="#"
                                                               class="link-plain"
                                                               tal:condition="python:item_type == 'Link'"
                                                               tal:content="item_title_or_id"
                                                               tal:attributes="href item/getRemoteUrl;">
                                                              External Link
                                                            </a>
                                                     </h2>

      								<div class="documentByLine">

                                                              <tal:newsitem condition="python: item_type == 'News Item'">
                                                                <tal:name tal:condition="item_creator"
                                                                          tal:define="mtool mtool|context/portal_membership; author python:mtool.getMemberInfo(item_creator)">
                                                                  <span i18n:translate="label_by_author">
                                                                    <a href="#"
                                                                       tal:attributes="href string:${portal_url}/author/${item_creator}"
                                                                       tal:content="python:author and author['fullname'] or item_creator"
                                                                       tal:omit-tag="not:author"
                                                                       i18n:name="author">
                                                                      Bob Dobalina
                                                                    </a>
                                                                  </span>
                                                                </tal:name>
                                                                &mdash;
                                                                <span tal:replace="python:toLocalizedTime(item.modified,long_format=0)">
                                                                  August 16, 2001 at 23:35:59
                                                                </span>
                                                              </tal:newsitem>
                                                     </div>

                                                              <a href="#"
                                                                 tal:condition="python:item_type != 'Link'"
                                                                 tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url">

											<img src="" alt=""
											   tal:condition="exists:item_object/image_preview"
											   tal:replace="structure python:item_object.tag(scale='preview', css_class='tileImage')" />
											<img src="" alt=""
											   tal:condition="item_has_leadimage"
											   tal:replace="structure python:view.tag(item_object, css_class='tileImage')" />

                                                              </a>


                                                              <a href="#"
                                                                 class="link-plain"
                                                                 tal:condition="python:item_type == 'Link'"
                                                                 tal:attributes="href item/getRemoteUrl">

							                        <img src="" alt=""
							                             tal:condition="exists:item_object/image_preview"
							                             tal:replace="structure python:item_object.tag(scale='preview', css_class='tileImage')" />
							                        <img src="" alt=""
							                             tal:condition="item_has_leadimage"
							                             tal:replace="structure python:view.tag(item_object, css_class='tileImage')" />

                                                              </a>

                                                      <tal:content tal:condition="python:item_type != 'Topic' and item_type != 'Folder' and not item_is_video">
                                                            <a href="#"
                                                               tal:condition="python:item_type != 'Link'"
                                                               tal:attributes="href python:item_type in use_view_action and item_url+'/view' or item_url">


                                                               <img src="" alt=""
                                                                   tal:condition="exists:item_object/image_medium"
                                                                   tal:replace="structure python:item_object.tag(scale='medium', css_class='tileImage')" />
                                                              <img src="" alt=""
                                                                   tal:condition="item_has_leadimage"
                                                                   tal:replace="structure python:view.tag(item_object, css_class='tileImage')" />

                                                            </a>


                                                            <a href="#"
                                                               class="link-plain"
                                                               tal:condition="python:item_type == 'Link'"
                                                               tal:attributes="href item/getRemoteUrl">
                                                              <img src="" alt=""
                                                                   tal:condition="exists:item_object/image_preview"
                                                                   tal:replace="structure python:item_object.tag(scale='preview', css_class='tileImage')" />
                                                              <img src="" alt=""
                                                                   tal:condition="item_has_leadimage"
                                                                   tal:replace="structure python:view.tag(item_object, css_class='tileImage')" />
                                                            </a>


                                                            <p class="tileBody">
                                                              <span tal:omit-tag="" tal:condition="not:item_description">
                                                                &nbsp;
                                                              </span>
                                                              <span class="description"
                                                                    tal:condition="item_description"
                                                                    tal:content="python:view.trimDescription(item_description, 250)">
                                                                description
                                                              </span>
                                                            </p>

                                                            <p class="tileFooter">
                                                            </p>
                                                            <div class="visualClear"><!-- --></div>

                                                      </tal:content>



                                                </div><!-- // title item -->

                                          </tal:block>

                                          <!-- Navigation -->
                                          <div metal:use-macro="here/batch_macros/macros/navigation" />

                                    </tal:listing>


                              </tal:foldercontents>
                        </metal:listingmacro>
                   </div>


                  <metal:subtopics use-macro="here/atct_topic_view/macros/folderlisting_macro" />

                  <div tal:replace="structure provider:plone.belowcontentbody" />

            </metal:main-macro>
      </div>

</body>
</html>
